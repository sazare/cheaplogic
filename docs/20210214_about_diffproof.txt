二つの証明の差を求める

・0-proof
  ΦをFactの集合としたとき、¬Φをnconjとして証明を作ることを考える

　当然、
　Φ+¬Φ　→ []
　ができて、その証明には新しい情報はない。

　これを0-proofと呼ぶ。Π0などと書く。

　あるルールrが適用されて[]が出たとする。
　Φ + ¬Φ + r ⇨ []
  0-proofではない証明があるとき、それをΠr(r-proofと呼ぶ)と書くとすると、
  Π0とΠrの差がrを使うということの特徴になる。

・証明の差はどうやってわかるか
　まず、pcodeをとる。
　0-proofの場合、factとnconjのlidのみになるので判別可能。
  r-proofの場合、input以外のlidが出現するので、そのルールが適用されたとわかる。

　証明を直接たどっても判別可能だが、ここではpcodeの話がしたかった。
　pcodeは証明の中のpairとして消滅したlidとreducedの場合のTになったlidのみから
　できる集合。(コンピュータでの比較が用意になるように、ソートし、出現が1回になるように
　している)
　pcodeと証明は1:1に対応しないが、その証明が持つ情報の概要を表すために使う。
　pcodeが違っていれば証明は必ず異なる。証明が同じならpcodeは同じになる。
　しかし、pcodeが同じでも異なる証明が存在する。そのような証明が同じ情報を持っている
　とは限らないが、現状、そこまで複雑な例がないので、pcodeを篩として使う。

・pcodeはresolutionを適用するかどうかをあらかじめ判定するために使う。
　同じpcodeになるresolutionをしないという方法。
　完全ではないが、よりはやく収束する。

・pcodeが有効に働くためには、同じpcodeをもつproofをひとつの表現とするような
　方法がよいのではないか。
　それが関数定義になってもよいし、何か別の表現であってもよい。

・ΠΔ = Πr - Π0
　とする。pcodeの場合、ΠΔは適用したルールのlidの集合になる。
　証明で考えるとき、
　　1) Π0とΠrは証明の形が相似なのだと考えられる。
　　　ただし、同じルールを繰り返して発生するような長い部分を持つことがあり
　　　それを取り出したものがΠΔになる。
　　2) 証明図に色を塗り、ΠΔの部分の色を変えるようなイメージがよいと思う。
　このように証明図で考えるとややこしくなるので、まずはpcodeで考えたい。





