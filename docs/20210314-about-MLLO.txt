機械/深層学習と自動証明のコンビネーションについて

1.最初の考え
　1、2年前に、自動証明と深層学習を組み合わせた研究の論文をさがしてみた。
　証明自体を学習するという話はいくつかあった。
　自動証明の計算量が多いので、それを解決するということだと思う。
　ただ、無矛盾性はともかく、完全性などは考慮されていないようだった。
　
　深層学習でなんでも学習してやるという風潮があるようで、その一貫であり
　自動証明とうまく組み合わさっている感じはしなかった。

　深層学習は、高度なセンサーだと思えば、世界の観察により、そこからFactを取り出す
　技術だとも考えられる。
　そのように得られたFactから、自動証明によって何か命題を求めることは、意味があるかもしれない。

　演繹システムは、証明が目的なので、元の公理系にない事実を導入してはいけない。
　だから、演繹システムは情報を加えないのであり、与えられた公理が含んでいる命題しか導けない。

　人間にとって自明でない命題を証明することはできるだろうが、
　それは、人間には、なぜそのような結論になったのかわからないタイプの証明なのかもしれない。

　センサーから得られるFactはすこし前のシステムにはなかった命題であり、論理システムは
　情報を追加しないかもしれないが、ML-LOシステムとしては新しい情報を取り入れている。
　そして推論自体はその情報以外の、恣意的な真実といえるかどうかわからないFactもどきは
　含んでいない。というシステムを考えることができる。

では、これは妥当な考えなのか?


2. 妥当だとしても、調べていくと、思ったより手に負えない感じがする
・ML002のようなものを考えるとき、+PP(p, a) でaがPPである確率をpと書くとすると
・+PP(0.4,a) => +PP(0.6, a) => +PP(0.8, a)
　と変化したとき、これらのfactは蓄積されてはまずいので、置き換わらなくてはならない。
　矛盾していなくても置き換わる。
　置き換わらなくてはならないかどうかは自明でない。

・置き換わるときの前提として、+PP(p, a)は1つしか存在してはならないという前提がある。
　つまりaについて+PPは1つのfactしか許さない。
　これは、PPがuniqueなaについての性質であるという性質。
・+R(p, a, b)というような「関係」の場合、(a,b)というペアについてuniqueな性質というものがあるか。
・uniqueというのは、(a,b)について1つしか関係がないという意味でなく、(a,b)のRという関係は1種類しかないとい>うこと。


★前提としているかもしれないことを明確にすることが必要。

・これは、Axiom Setのupdate。
　Factのupdate。
　Factが変わるというのは、矛盾するものは消すということ
　何を消せばいいのかは自明ではない

・つまり、モデルについて成り立っている条件を使えば、直感的な推論にそうこともできる
　それをaxiomとして追加する罪?
　意義はあるのか?


3. できることはなにか?
・どのようなgoalを選んで証明しようとするのか?
・新しいfactはDLから次々と流れてくるが、システムが証明したいものは何か?
・Goalはシステムとは別の文脈で発生しなくてはなるまい。
　演繹システムは情報を足さないので、同じ穴からでたgoalではあまり意味がない。はず。
★　　反例はあるか?

・では、システムの外で選ぶgoalとは何か?

・これは、自立型システムであり、世界とのinteractionがあるようなもの
　つまり、ロボットでの課題だと思う。ロボットにいては後記


・自動証明の枠で考えるならば
　・述語があらかじめ決まっている。
　・Factの形(unit clause)は、システム内で生まれるgoal
　・Fact収集のフェーズはありそう。
　　・新しい述語が導入されたとき、その述語に関する公理を作るフェーズ。
 　 ・仮説というのは、Factの形をした命題か、変数を含むもので
　　　(1) 公理システムで証明があるもの
          これに対して深層学習でその仮説が成り立つかどうかを聞く
　　　　　深層学習に対して、「これは成り立つか」という質問は
　　　　　命題をモデルの言葉に翻訳して、学習推論によるその命題の確からしさを求める
　　　　　ということになりそう。
　　　　深層学習で、「何々」の確率を求めるとは、どういうことか?
         ? classificationではなく、判定ってカテゴリあったっけ?
　　　　　　aはクラスAに属しているかどうか? decision treeみたいのはあるのでこの問はある。
　　　　　　もし、「何何」が変数を含んでいたら、困るかな。

　　　　・すべてのinstanceはそれであるかどうかの確率pをもつ。ということは
　　　　　a => (p,a)で表される。
　　　　　センサーで得た情報が(q,a)で、q>=pのとき(p,a)は存在すると考えられる。

　　　　・pが確率だと書いたけれど、確率ではなくp+qi　複素数かもしれない。
　　　　　　確率でなく、何か

　　　　　　
　　　　 ? 「何何」をどうすれば深層学習で判定できるようになるのか?


　　　(2) 公理システムで証明ができないもの
　　　　この場合、その命題が深層学習で得られるなら新しいfactの追加になる。


★ Factと仮説の違い
　・Factは世界からDLが解釈したground命題
　・仮説は、一般化されて変数を含まなけれは
　　　判定問題。深層学習の対象世界の表現に変換する。

　・仮説は、一般化されて変数を含むと、センサーのハンドルとして定義し
　　いずれ仮説条件がfalseになると、反証発見とtriggerされる。

　・仮説が -P(f(x))のとき、センサーが+P(f(a))をみつけたらfalseでトリガー。
　　-P(x)はセンサーは発見できない。

　　+P(b)は+P(a)がみつかったとき反証される? ドメインに対する仮説が必要。
　　　Pが、ドメインの要素についてどれか1つでしか成り立たないなら、+P(a)なら+P(b)ではない。
　　　-P(b)が言える。
　　一般には、+P(a)かつ+P(b)はありうるので、このような推論はできない。
　　　これは、今のproverの標準。

　　　
　　-P(f(x))に対して、センサー+P(g(a))は関係しないので無視
　　　これもresolutionデフォルト動作



★ Logicの重要な特徴は
　・プログラミング言語は、基本の変更と手順で世界に及ぼす変化を記述する。
　　・
　・論理では、世界や問題を関係で表現できるという特徴がある。
　・prologでは、同じ論理式の解釈でこの二つを切り替えたり、共存したりできるいうような言い方をすると思うが、
　　関係のtupleで変化を表し、それをA⇨Bで表現する。それが妥当かどうかは、どこかで書いた気もする。



[A⇨BとA∧B]
・A(x)が事前条件で、最後の条件がB(x,z)だとしたとき
　1) ∀x,∃z A(x)⇨B(x,z)
　2) ∀x,∃z A(x)∧B(x,z)
のどちらが適切か?
場合によって、使い分けてきたような気がするが、その根拠はなにか?
**どういう場合だったか思い出そう**


存在を言うときは、2)のほうが適切な気がする。

再帰的なプログラムを記述するときは、goalとして3) B(x,z) だけ書くかもしれない。
A(x)はA(a)のようなground clauseになり、Axiomに含める。

1)2)がgoalであると、否定をとるので
1') {+A(x),-B(x,z)}
でばらばらになるが
2') {-A(x)-B(x,z)}
と1clauseになるから変数の関係が示しやすい。-Aと-Bが共通の変数xを含むから。



 もしかすると、
　2'') ∀x,∃z A(x)∧B(z)
かも。

そもそも、1)や2)が単体ででてきても、意味がとらえれらない。
このような場合は、A(x)は入力データに関する判定なのであり、たとえば
3) A(s(x)), B(x,z) ⇨ B(s(x), f(x,z))
みたいなものになるはず。


たとえば、ある条件Φ(x)が成り立つ間はx→f(x)として、¬Φ(x)になったときループを
終わりにするような書き方だと

Φ(x), B(x,y) ⇨ B(s(x), z)

ぽいんとがわからない・・・

4) B(x,f(z)),Φ(x) ⇨ B(s(x),z)

5) B(x,f(z)),Φ(x) ∧ B(x,z)

なんかちがう。ここらへんは定義域の話だから、P(x)|D(x)みたいな感じか。

*偶数 Even(x) というドメインを定義する
6) Even(2)vEven(4)vEven(6)v...
6') ∀x N(x) Even(x*2) , N(x): xは0より大きい整数
は真になる

7) Even(2)∧Even(4)∧Even(6)∧...
ではないのか?

Even(x)のxがひとつしか存在しないならば、Vで繋ぐのだろうけれど、
[[Even(-)]] = {x | Even(x)}みたいのを考えているので、∧でつないでOKだろう。


A={1,2}の場合は、Aに対応する集合を[A]と書くとき

x∈Aのとき [A](x) が真になる。という意味で

[A](x) if x in A


[[A]]={[A](1),[A](2)}











*ごみから*
・+P(x)+Even(x)→+P(x/2)は、xをどんどん2で割っていくイメージを描いたもの
・Div(x,y)が、yはxを割り切る 'x mod y = 0'だとすると
　+Div(4,2), +Div(6,3), +Div(6,2), ...
　はすべて真だから
　+Div(4,2)v +Div(6,3)v +Div(6,2), ...
　も真になる。

*ごみまで*　


[ロボット]
・自立型ロボットの場合、考えているのは
　判定システムのレイヤー化。これは動物と同じ
　動物は本能とか理性というようなレイヤーに分かれた判定システムを持っている。
　上側の判定は、下位の判定システムを教師として学習がすすむ。
　人間の本能は、胎児の期間に構成されると思うが、根本は、「苦楽」だと思う。
　生存に必要な究極の基準は、「気持ちいい」か「苦しい」になっている。

　出産直後、酸欠で苦しい。それを解決する方法が「泣く」という行為。
　このときの「なく」は呼吸するという行為と重ね合わされている。
　この「なく」という行為は一択であり、その後与えられるすべての苦を解決する手段でもある。

　一般的に動物は出産直後、なくものだろうか?

　そういえば、鳥は四六時中「鳴いている」ような気がする。

　

　「なく」に対する世界の反応が親による解決
　「排尿」「排便」は「楽」だが、その後、人間の場合は、おむつにたまった排泄物による
　いやなかんじ「苦」が生じ「なく」

　「空腹」は「苦」であり、乳を飲むことで「苦」が消滅するが、それも「なく」と「乳」が
　与えられる。

　「乳」を吸う行為は、もっと根源的な部分でプログラムされているのかもしれない。

　「泣く」以外に「笑う」が行為の選択肢にでてくる。
　「視覚」から得られるデータの類別ができるようになるのは、「笑う」がひきおこす
　世界の変化と、「苦楽」の関連付けからか。



　などなど
