20230205-how-about-goals.txt

公理集合Σに含まれる情報をgoal gによって取り出す。ということを考えたい。

 Σ→g ... (1)

という証明が(g,Σ)のひとつの情報である。
証明は計算という形、表現にすることもできる。

一つのgに対して、Σで構成できるすべての証明というものを考える。
こういったすべての証明の情報をあつめたものを(g,Σ)の情報と考える。

同じΣであっても、gをどう選ぶかで取り出せる情報がことなる。Σに含まれる述語記号がP,Q,Rであれば、+P(x),+Q(x),+R(x)-P(x),-Q(x),-R(x)などが基本的な情報になるだろう。
(引数の数や形のバリエーション)

resolutionという規則の性質から、goal gの証明、あるいは¬gのrefutationをするとき、Σのどのようなパターンが取り出されるのだろうか。

[準備1]
goal gに対して、Σ,¬g→□の証明がrefutaion(反証)であり、反証が存在するとgのインスタンスg'の証明を構成できる。aがbのインスタンスであることをa≦bと書くことにすると

Σ→g'
ならば
g'≦g
である。

[準備2]
(a)Σは矛盾を含んではいけない。
一般のFOLでは、[]∈Σならば任意のCについてΣ→Cが証明できるので、この条件は必要になる。

例
・Σa = {2,3}, goal=1
1. -P(x)
2. +P(a)
3. -P(a)

g+Σaでは、1,2から[]が導出できるが、そもそもΣa={2,3}だけでも[]が導出できる。
ただ、Σa自体が矛盾しているけれど、証明器はgoalだけに着目しているとΣaの矛盾に気が付かないという例になっている。goal 1を使ってできる証明に3は関与しない。

・Σb
1. -P(x)
2. +P(y)+P(z)
3. -P(a)

Σbでは、次のように、1,2,3すべてが関与する反証が作れる。

+P(y)+P(z)  -P(a)
----------------- {y←a}
+P(z)       -P(x)
----------------- {z←x}
[]

しかし、2と3はそれだけで矛盾するので、Σbは[]を含み、除外する必要がある。

goalと同じものがもともとΣに含まれていれば矛盾するので、2のように+P+Pの形のclauseが含まれていると発生する。

これは、goalを含めないΣだけで[]を導出できればΣに矛盾が含まれているということになる。

★ Σに[]が含まれていないことを確認してから、goalの証明を調べればよい。
★とはいえ、goalの証明と関係しない部分で矛盾があっても問題があったりなかったりすることを覚えておこう。例

Σc
g. -P(x)
2. +P(a)
3. +R(a)
4. -R(a)

Σの各clause c について、

Σ, c → []?
を調べればよいだろう。

あるいは、Σの全述語{Pi}について、
Σ, +Pi → []?
と
Σ, -Pi → []?
を確認すればよいのではないか??
(Σに矛盾が存在するとき、atomicな式から[]が証明できる)

(b) gに関係する部分に矛盾を含まなければよい

ぎりぎりのところに線をひくのであればこれでもよさそう。
(g,Σ)が証明の集合なので、これに含まれない証明の中に[]があってもよいとする方法。
たとえば
Σ = {+P, +R, -R}
で、goalが-Pとして[]が求められるから
Σ → +P
の証明ができたと考える。そのとき矛盾している{+R, -R}の部分については問わない。

最小無矛盾集合とでもいうものを考えるのか??



==============
goal -P(a)について、Σとその定理のリテラルは次のように分類できる

まず、[]にできる、次のg'
　1-1-1) +P(a)
　1-1-2) ∀x +P(x)

次のようなリテラルは-P(a)との間でresolutionを適用できず、[]は作れない。
　1-2-1) -P(a)　　　　　...　これは反証できないだけでなく、Σがトートロジーを含む。
　1-2-2) +P(b)　　　　　... bがaなら反証になるが、goalにかすらないということ
　1-2-3) ∀w +P(f(w))　 ... f(w)はaとunifyできないので、goalとかすらない

これらのリテラルは、ほかのclauseから導出される場合もある。
　1-2-4) Σのinput literalの中に+P(a)をインスタンスとするリテラルが存在しなければならない。


Σ,gで得られる-g'は、符号を除くとg'≦gになっている。



1-1-1) -P(a):goal
この場合、g'は+P(a)であり、+P(a)≦+P(a)となる。

1-1-2) -P(x):goal ただしxは変数
この場合、g'は+P(a)であり、+P(a)≦+P(x)となる。
-P(x)が矛盾するのは、a一点であり、xが取りうるa以外の値については証明は構成されない。

このふたつ以外に+P(-)形のg'は存在せず、
1-2-2)+P(b)や1-2-3)∀w +P(f(w))は、もしもΣから証明できても、gの証明としては構成されない。構成される必要がない。

1-2-1)-P(a)
もしもΣに-P(a)が含まれていたりΣから-P(a)が導出できた場合、-P(a)が真ということなので、goal-P(x)は証明できない。
resolutionの推論規則では、-P(a)と-P(a)をresolveすることはないので、証明器としては-P(a)が導出できたとしても、証明構成からは無視する。


以下では、Σは矛盾していないことを前提とする。
証明器では、Σの総当たりによる証明探索をする必要がありそう。goalありの証明探索はだめ。
あるいはΣを作るときに矛盾を含まないように作っていくことができればよい。


------
goalの形で何と矛盾できるかを考え、そのgoalの否定がどうなるのかをみようか

goal:-P(x)を考える

1) -P(a)             : +P(t) | a⊑t。tはxしかない。
2) -P(a),-P(b)       : +P(t) | a≦t か+P(t) | b≦t
[]を1つ出すだけなら、このうちのどちらかでよい(∨)
すべての[]を知りたいなら、両方がほしい(∧)

3) -P(a)-P(b)　　　　: +P(t)と+P(s) | a≦t、b≦s
4) -P(a)-P(a)　　　　: +P(t) | a≦t 
5) -P(a)+R(a)　　　　: +P(t)と-R(t)|a≦t

6) -P(a)+R(b)　　　: +P(t)|a≦tと-R(s)|b≦s




