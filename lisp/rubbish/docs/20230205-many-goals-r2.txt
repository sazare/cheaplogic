many goalsのまとめ

goalを否定することでconjectureがどういう形なのかを考える。
∃を含むconjectureの場合、∃xに対してskolem関数/定数を導入するとう話にならないのか?

もしもあらかじめそのskolem定数がわかっていたら、skolem定数の導入ではその定数を用いれば良い。

Prologで、-P(a,z)としてPf(a)の値を求めるとしたら、conjectureは
∃x,∀z +P(x,z) ... (1)か
∃z +P(a,z) ... (2)か

(2)の場合、-(∃z +P(a,z))は
∀z -P(a,z)

(1)の場合、-(∃x ∀z +P(x,z))の-を中にいれるまえに∃xをaでskolem化して∀zはなにもしないとかいうでたらめをすれば

-P(a,z)

になる。


(1)の場合、-(∃x ∀z +P(x,z))をnegを内側にいれてしまうと
∀x ∃z -P(x,z)
このzを求めたいので、skolem化しないとしてもxが不明


----
Prologのconjectureの束縛変数の扱いよくわからない。


たぶん∀も∃もないオープンな式

λx,z +P(x,z)

から始めているのではないか?

------
[複数リテラルのgoalの場合]

-P(x)-Q(x)

は、両方のリテラルが消えたとき[]ができるので
+P(?)と+Q(?)の両方が証明できる必要がある。
だから、
+P(x)∧+Q(x)
がconjectureぽい
このxがPとQで同じ値になる必要があるので
∀x(+P(x)∧+Q(x))
みたいになる。

****
変数で書いたとしても同じ変数にするかどうかで意味が違ってくる




