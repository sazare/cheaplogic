20230311-conflict-disolver

[ε]
代入σを等号式に替えたものをε(σ)と書くことにする。
　例)
   {x ← t} ⇨ x = t 
　 {x ← t, y ← e} ⇨ (x=t ∧ y=e)

　代入から等式を作るので、mguが満たす条件から次の条件を満たす。
　　1) 左辺はすべて変数である
　　2) 変数はすべて異なる
　　3) 変数は右辺の一部に出現しない


[矛盾の解消法]
Σ, factのシステムで、矛盾がでたときの解消について
fact fは、Σよりも信頼性が高く真であると考えられる。
今、観察された事実なので。とはいえ、センサーの異常かもしれない。


1) Σ → f はf∈Σであり、Σにfを追加する必要はない。この状況は"Σ accept f"
2) Σ → f and Σ → 〜f は、fについてΣが矛盾している。(下記)
3) Σ /→ f and Σ → 〜f は、factのfをΣが認めていない。Σ unaccept f.
4) Σ /→ f and Σ /→ 〜f は、Σにはfにまつわる情報がないか、関連がないということ。


[補足]
1) σ:Σ→fの場合、Σにf*σを追加してもよい。証明の高速化になる。意味は変わらない。

2) の場合、Σの想定する結果(〜f)と現実(f)が矛盾している場合がある。
　　σ:Σ→f かつ ρ:Σ→〜f の両方が証明できたとき、
　　ε(σ) ∧ ε(ρ)を満たす場合があれば、その場合はf*σと〜f*ρは矛盾する。
　　このときは、メタな判断が必要。fが真だと信じるなら、〜fをΣから除去したい。
　　Σが矛盾を含んでいてもよいという考えもある。論理的には矛盾しているが、証明器としては
　　発見するまではないのと同じという考え。
　　
　　[矛盾した場合、その可能性]
　　 2.1) センサーの異常(fの検知方法の間違いとかfの解釈の間違いとか)
　　 2.2) Σの異常(信じていたことが間違っていた)

　　[矛盾した場合に矛盾を除くには]
　　Σを
　　　∧i(ε(σi)∧ε(ρi)) ∨Σ
　　に置き換える。この条件がΣ全体につくと、新たな矛盾は発生できなくなる。
　　矛盾するclauseは単に除去するだけでよい。

　　[矛盾しない場合]
　　 ・Σに次の2つの式群を追加する。
　　　　∧i(f*σi∨〜ε(σi))
　　　　∧i(〜f*ε∨〜ε(ρ))

　　*** ここの考え方は、σ:Σ→φ の場合に、Σ*σ→φ*σは命題算の証明になるということ。
　　こういう証明をすべてのφについてもとめて、∧すると、すべてのφの証明の命題算版がもとめられる。


3)の場合は、Σ自体は矛盾していないが、fact fの真実性をΣが否定しているので、2)と同じような議論になる。

4)の場合は、Σにfを追加してよい。





