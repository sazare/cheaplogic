変数を使ったルールの扱いについて

ここでは、ML-Proverのようにオーブンな世界にたいする論理の応用を考えている。


graph503.kqcのC15のように、変数を使ったclauseはルールに相当する。
変数を含まない言明は、命題相当であり、現実世界の断片を記述していて、factと呼べる。

変数を含む複数literalのclauseは、一般化されていてルールに相当する。

では、そのclauseの正しさはどのように保証されるのか?

axiomとして与えるということは「正しさ」が前提なので、証明器としてはその正しさの保証については考慮しなくていいだろう。
ここでは、ML-Proverのようにオーブンな世界にたいする論理の応用を考えていて、その正しさをどう保証するのかまで問いたい。

まず、givenだとする場合なにがおきるか?
変数xにHerbrand Universeの全termを代入しても真になると考える。
それが大雑把すぎるならば、型をもちこんで、型=データの集合の中での真を期待する。

無限の定数に対する真の保証はどのようにして可能になるのか?
たぶん、証明器が依存する構文的な情報だけでなく、その外側のモデルにもとづく真偽を考えることになるのだろう。

モデルが無限であるという考えは数学的にはありだが、計算的にはどうなのだろうか。

計算機において、数値は、整数であれば上下限、有理数/実数については範囲(ε)を考慮した近似によるといったその表現について無限を制限する条件付きの、巨大な有限ドメインを考えるしかない。(無限長精度整数などはどうか???)

そのようなドメインについて変数xをあてがい、ある命題やルールが真になるかどうかを証明することはむずかしい。
証明の方針を立てることはできても、実行するのが無理とかいうことはある。

より基本的な公理をもとに証明を組み立てるということはできる。その基本的な公理をどこまで遡れば役に立つ公理が構成できるのか?

有限でほころびる世界を統一的に証明することはむずかしい。実行することができない。
有限の世界をどう表現するか。
その世界の境界をどう扱うか。

そのような面倒なことをしないために、無限というものが出現したのだとも思える。

****
現実には有限しかないのに、無限の要素があると前提して何かを表現すると、何が問題になるのか?

1. その表現は正しくないので、正しく書こうとするとできない。
2. それが無限であると考えて問題のない範囲では正しく書けるので、その境界をあきらかにすべきだが、これは仕様と欠陥の問題であり、間違ったときにどうすれば問題点が分かるかというテーマで解決できるのか?


