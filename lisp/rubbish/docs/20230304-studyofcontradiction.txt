20230304-studyofcontradiction

矛盾の研究

・Σ,φ→[]からΣ→φをだすのではなく、もっと直接的な考え方をしたい

・世界をセンサーで述語化し、知識をもとに推論をして、世界に対するアクションを導く

　World -> Sensor -> [fact] -> Rational <- Knowledge(Σ)
                                   ↓
　　↑← Actuator ← command　←          ← Desire


・成長サイクルの観点からは、事実の波動がΣ(知識)の成長を促す。
　　観測事実fが知識Σと矛盾するとき、世界に対するアクションが発生する。
　　　- 矛盾の原因を探す。何か間違っていないのか?　世界に対する問い合わせが発生
　　　- 世界を変化させて矛盾を解消する。そして結果を確認する。

　　など
　　矛盾をトリガーとして知識の再構築(一部)する

　　変化しない世界は何も見えないはず。

　　だから、世界の変化が知識と矛盾する時、proverがトリガーされ、新しいアクションが発生する。

・人間はたぶん、処理と論理の間をいききしている。
　新しい事柄は断片的な知識を集め、それが論理によって組み合わせひとつひとつ証明を作り、それに対応する手続になる。

　いったんそのような手続体系ができあがると、もう論理は不要で、手続で効率よく行動する。

　手続を表す論理知識は、不続きの満たすべき条件を持つので、より多くの情報を持つが、手続の実行には不要な情報があり、それらを除去して効率のよい行動を行えるようにしている。
　手続がうまくいかないときは、論理知識に戻り断片が妥当かどうかをチェックして誤りを発見、修正できる。

　人間はなぜか理由をつけたがるのだが、その理由本能は論理知識の適用だと思う。


・proverとは
　証明を作るものだが、知識Σとgoalがあって、(Σ, g)からいろいろ証明を作ろうとする。
　　Σ→g
　　Σ→¬g
　両方が証明可能ならΣはgにおいて矛盾している。

・Σに矛盾が存在するとは?
　　Σに矛盾が存在しても、その矛盾が生活=操作(prover)に関係なければ無視できる。
　　人はそのように生きている。

　　これから、(Σ,g)なproverが人間の思考のベースであると仮定してもよさそうに見える。

・Π(Σ, g)で見つけられる矛盾
　論理体系と証明器との違い
　　論理と操作
　論理体系では、推論規則はアルゴリズムなし(全組み合わせがそこにあるとして)で適用される。
　証明器はそこに手続として順序を導入して、証明を探す。
　　なので、証明器が見つける論理的状態は、部分的であり論理体系での全状態がすでにあるという観点とは違う。
　たとえば、Σ={+P(a), -P(b)}の場合、
　　同じPのリテラルでも
　　a)goal +P(a) はresolve対象ではないので[]が出ないが、この場合はΣによって+P(a)が真だとみなされる。
    b)goal -P(c)はresolveするがmguがないので[]ではなく、-P(c)は新しい知識になるはず。
    c)goal +P(c)もresolveするがmguがないので[]ではなく、+P(c)は新しい知識になるはず。
 b)とc)はセンサーの判定が知識になりΣをupdateしてよい。
　Pでなく、Σにない述語Rについて-R(a)や+R(b)も同様にfactにあれば新しい知識になるはず。
　　ただし、Rがロジック側に知られていないと難しい。

　* 「ロジック」というのはおかしくて、生物側なのだが適当な用語がほしい。
　*　新しい述語がいつどこでどうやって生まれるかは大きな問題

まとめると
　ゴールg= L(~)とΣが与えられた時
　　Σ→g
　の証明は
　　Σ, ~g → □
　という反証に置き換えて証明できる。
　一方で
　　Σ, g → []
　にも意味があるので、両方実行するとすると、「反証」を求めるという目的であるとする意味は薄い。


・Σ自体に矛盾があっても、goalがなければ証明が始まらないので、(Σ,g)をproverのパラメータと考える。
　(Σ, g)から矛盾が生まれるということは、なんらかの述語記号Pが存在して、Pについて+Pと-Pが証明できる、ということになる。

　* Σを分析するとき、全述語Pについて矛盾の可能性を調べる必要はあるかもしれない。

*補足
　1-prover: goalの証明を1つだけ見つけるという問題を解くprover
　n-prover: goalの証明を複数求めるprover。

* 記法
　<e:g> = eとgのmgu。なければ未定義。
　《e》 = H上のeのinstanceの全体


　最もシンプルな例

[factの追加1]
　Σ = {+P(x)}
  fact: +P(a)

　このとのきの証明
　<P(x):P(a)> = {x←a} ⇔ x=a 
　Σ={+P(x)}, -P(a) → [] (反証探査)
　矛盾はx=aの点で発生しているので、x≠aならばΣの+P(x)は矛盾していない。
　だから、Σは次のように変更できる。
　Σ' = {+P(x) a=x, +P(a)}
  factをΣに加え、factと矛盾しない範囲の条件を加えてΣのfactと矛盾した命題を制限する。
　このΣ' は矛盾していない。factを含んでいる。

　- 手順 1
    矛盾していないΣ={L,...}, fact=φ
　　のとき
　　∃<L:~φ>=σで[]になったとする。

　　L*σ ≡ ~φ*σである。

　　これは次の証明ができたことを意味する。
　　Σ → φ*σ
　　また、Σ*σ → φ*σ は、σのない命題レベルの証明になる。

　　このとき、次のようにΣを拡張しΣ'を作成する。
　　σを等式に変換したものをρと書く。

　　Σ' = {..., L∨ρ, φ}
　　ρはφとLの矛盾する条件なので、L∨ρは、φが矛盾するデータの範囲を除外したLになるので
　　Σ'は矛盾していない。

*参考*
 <P(x,a):P(b,y)>の場合、σ={x←b, y←a}なので、ρ={x=b, a=y}
Σ={+P(x,a)} fact=-P(b,y)ならば
　Σ' = {+P(x,a)v(x=b),-P(b,y)}
 

*negativeなfactについて*
 -P(a)はPがnegativeであれば、positiveな意味になる。
　Pがpositiveな意味の場合、-P(a)はどう解釈すべきか

　1) 解釈1(推論型)
　　　+P(x)∈Σであり、+P(b),+P(c)など《P》の要素がある程度多くなった場合
　　　fact +P(a)がまったく出現していなければ-P(a)と言ってもよい

  2) 解釈2
　　　センサーの能力で-P(a)が発見できた場合。(命題探知型)

　3) 解釈3
　　　-P(a)という表現をセンサー解釈で検知できる場合。(問い合わせ型)

**
** センサーの能力についての疑問
　センサーが推論してよいかどうか
　センサーが述語/定数を発見してよいかどうか
**

　- 手順 2
　　手順1で、Σ, φ から□が導出できなかった場合
　　Σ, φ → □の導出を試みる。

　　これが証明できた場合は、Σ→¬φが証明できるので、factφはΣにとって既知の情報であったことになる。
　　故に
　　　Σ' = Σ
　　とする。

  　これが証明できなかった場合は、Σとφは矛盾しないので
　　　Σ' = Σ∪{φ}
　　とする。


[factの追加2]
　Σ = {+P(x)}
　fact: +R(a)
　この場合、factはΣに矛盾しないので、Σ' = Σ∪{+R(a)} = {+P(x), +R(a)}としてよい。


・fact列とΣの分析
　たとえば、Σ=φからはじめ、fact列 f1,f2,...をもとに
　Σ1, Σ2, ...と変化させていくことが考えられる。

　Σの拡張が破綻するときまで続けられるだろう。

　Σの拡張が破綻するのはいつか?

　例えば
　Σ={..., +P(a)}
　でfact -P(a)が観測されたような場合、このfactによる拡張はa ≠aであり等号の性質から拡張不可能なので破綻する。
　拡張する命題は
　　A : +P(a) v -(a≠a)
　だから、-(a≠a)は真なので、Aはトートロジーだから、Aが□になることはないので、反証プロセスは終了しない。
　ということになる。これはgoalの証明の破綻である。
　(だが、他の証明はないのかどうか?はわからないので、他の証明プロセスの探索は継続してよい。
　このとき、何がおきるのか??(3/5)


・例の見直し
　- 懐中電灯は、これで解釈するとどうなるか
　　- レシピ、二十の扉
