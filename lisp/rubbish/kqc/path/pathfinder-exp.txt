pathfinder実験

kqc/path/*.kqc

coregraph.kqc は一直線

(require :gtrail)
 (in-package :rubbish)
(readkqc "kqc/path/coregraph.kqc")
(defparameter *enable-semantics* nil)
(prover-gtrail '(c1))

(require :gtrail)
 (in-package :rubbish)
(readkqc "kqc/ml002.kqc")
(prover-gtrail '(c1))


;;;
(load "play-prover-gt-ml002.lisp")
 (in-package :rubbish)

;; a->b->c
(readkqc "kqc/path/graph001.kqc")

;; 確認方法
; (print-clauses *clist*)
;  で[]をさがす。C15なら
; (print-proof0 'C15)
; で代入の状態を確認する。これかな★★

; もっと楽な方法はないかな
; 他の例も考える

* (- N ...)を(-N ...)と書いていて、うまく[]ができていなかった ******


:graph00[123].kqcで、a->b, a->c, a->dを書いたOK


