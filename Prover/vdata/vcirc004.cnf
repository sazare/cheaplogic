# A simple circuit problem separate View and Reso
# primitive cases are retten by +DC
# this let no view in sw=on, lamp=light
# but  sw=off, lamp=black make views... 

#  sw -- lamp -- power -->{sw} -- is wire

# C(time, lamp,switch,power,wire)
# lamp   light,black
# switch on/off
# power  charged,empty
# wire   conn, cut

# template: [sw,lamp,pow,wire].[-C(black,on,pow,wire)]

# ask the problem
# 1st question is swich and lamp relation
# VQ's view ask user about it
# this goal convert the query to 4 tuple relation
[x,y,z,w].[-DC(x,y,z,w),-VQ(x,y)]

# Knowledge/Premise
# thiese are the positive spec(intension) of the circuit 
[].[+DC(light,on,charged,conn)]
[].[+DC(black,off,charged,conn)]

# these are primitive premise reasons for lamp=black when sw=on
#[].[+KC(black,on,empty,conn)]
#[].[+KC(black,on,charged,disc)]
#[].[+KC(black,on,empty,disc)]

# negative premises can be replace them
# little general
[y,w].[-KC(black,y,empty,w)]
[y,z].[-KC(black,y,z,disc)]

# Rules
# literal order? KC to last
[x,y,z,w].[+DC(x,y,z,w),-VPOW(z),-VWIRE(w),-KC(x,y,z,w)]

# CANO
&[LAMP0,SW0].[VQ(LAMP0,SW0)]
&[S0].[VSW(S0)]
&[L0].[VLAMP(L0)]
&[P0].[VPOW(P0)]
&[W0].[VWIRE(W0)]
