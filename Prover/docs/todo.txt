
1 coreからclauseをとってくる
  readcore()をしてcoreを作り
  printcore()でcidをもとめ
  clause2of(cid, core)でCForm2を得る
  キーワードつきのリテラルをclause2ofでとってくると
  Exprのキーワードつきの表現にしかならない。
　KPExprのように、引数のDictにならない。
  表示だけなら
  printclause(cid, core)

2. printcoreやprintclauseでKP版
  printclauseでもキーワードつきの表示になる。

2.5 clauseをとってきて、resolutionをしたい。
  proverのreplがほしくないか
  KPについて、再設計したほうがよさそう。それほどKPは使いたくないような気もする。

3. メモ
　dumpしてみると、Dictは結構メモリを使っていて(あたりまえだけど)
　引数の数が少ないとリテラルごとにこのような表現で引数を表現することになり経済的ではない。
  引数が何万もあるような述語の場合に、キーワード引数を使う場合は、Dictのほうがよさそうだが、
　まず、助詞の表現だと考えると、そんなに助詞の数の多い文章はないので、この場合は適さないだろう。
  助詞でない場合でも、そもそもキーワードをつけるということは、人間が見てわかりやすくするということではないのか。これは矛盾している。
　人間に関係なくキーワードが有効だとしたらどのような場合があるのか★

4. constantに文字列や文字もいれたい

